package org.example.model;

import jakarta.persistence.*;
import org.springframework.format.annotation.DateTimeFormat;

import java.util.Date;

@Entity
@Table(name = "students")
// 4. Using Named Query
//@NamedQuery(name="Student.findByAttributeName",
//            query = "SELECT st FROM Student st WHERE st.name = :name" )
public class Student {

    @Id //ID is the primary key for the table students in the database
    @GeneratedValue(strategy = GenerationType.AUTO) // ID is auto-generated by the database when a new student is added
    @Column(name = "id", nullable = false) // ID is a column in the table students and cannot be null
    private Long id; // ID is a Long type variable

    @Column(nullable = false) // name is a column in the table students and cannot be null
    private String name; // name is a String type variable

    @DateTimeFormat(pattern = "yyyy-MM-dd") // enrollmentDate is a column in the table students
    private Date enrollmentDate; // enrollmentDate is a Date type variable


    // courses is a column in the table students
    //default value is an empty string
    private String courses;


    // default constructor
    public Student() {
    }
 // parameterized constructor with name, enrollmentDate, and courses as parameters
    public Student(String name, Date enrollmentDate, String courses) {
        this.name = name;
        this.enrollmentDate = enrollmentDate;
        this.courses = courses;
    }

    public Long getId() {
        return id;

    }


    // getter and setter methods for the variables in the Student class
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Date getEnrollmentDate() {
        return enrollmentDate;
    }

    public void setEnrollmentDate(Date enrollmentDate) {
        this.enrollmentDate = enrollmentDate;
    }

    public String getCourses() {
        return courses;
    }

    public void setCourses(String courses) {
        this.courses = courses;
    }
}
